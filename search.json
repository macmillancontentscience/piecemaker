[{"path":[]},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CONTRIBUTING.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"NA","text":"Want contribute? Great! First, read page (including small print end).","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CONTRIBUTING.html","id":"before-you-contribute","dir":"","previous_headings":"Contributing","what":"Before you contribute","title":"NA","text":"can use code, must sign Macmillan Learning Individual Contributor License Agreement (CLA), asked automatically submit pull request. CLA necessary mainly copyright changes, even contribution becomes part codebase, need permission use distribute code. also need sure various things—instance ’ll tell us know code infringes people’s patents. don’t sign CLA ’ve submitted code review member approved , must can put code codebase. start working larger contribution, get touch us first issue tracker idea can help possibly guide . Coordinating front makes much easier avoid frustration later .","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"Contributing","what":"Making changes","title":"NA","text":"use github fork pull review process review contributions. First, fork repository following github instructions. check personal fork: Add upstream remote can easily keep date main repository: update local repo main: ’re done making changes, make sure tests pass, commit changes personal fork. use GitHub Web UI create send pull request. ’ll review merge change.","code":"$ git clone https://github.com/<username>/piecemaker.git $ git remote add upstream https://github.com/macmillancontentscience/piecemaker.git $ git pull upstream main"},{"path":"https://macmillancontentscience.github.io/piecemaker/CONTRIBUTING.html","id":"code-review","dir":"","previous_headings":"Contributing","what":"Code review","title":"NA","text":"submissions, including submissions project members, require review. keep code base maintainable readable, code developed using similar coding style. typically follow tidyverse style guide, minor changes. code easy maintain understand. important able come back, months later, code ’ve written still quickly understand supposed . Understandable code also makes easier people contribute. Quick--dirty solutions “clever” coding tricks might work short term, avoided interest long term code quality. code review process, ensure least two sets eyes looked code hopes finding potential bugs errors (become bugs errors). also improves overall code quality makes sure every developer knows (largely) expect coding style. Unit tests important part code. aim 100% test coverage, recognizing functionality may hard cover unit test.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/CONTRIBUTING.html","id":"the-small-print","dir":"","previous_headings":"Contributing","what":"The small print","title":"NA","text":"Contributions made corporations covered different agreement one . Contact us applies .","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://macmillancontentscience.github.io/piecemaker/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer. Jonathan Bratt. Author. Bedford Freeman & Worth Pub Grp LLC DBA Macmillan Learning. Copyright holder.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J, Bratt J (2023). piecemaker: Tools Preparing Text Tokenizers. https://github.com/macmillancontentscience/piecemaker, https://macmillancontentscience.github.io/piecemaker/.","code":"@Manual{,   title = {piecemaker: Tools for Preparing Text for Tokenizers},   author = {Jon Harmon and Jonathan Bratt},   year = {2023},   note = {https://github.com/macmillancontentscience/piecemaker, https://macmillancontentscience.github.io/piecemaker/}, }"},{"path":"https://macmillancontentscience.github.io/piecemaker/index.html","id":"piecemaker","dir":"","previous_headings":"","what":"Tools for Preparing Text for Tokenizers","title":"Tools for Preparing Text for Tokenizers","text":"Tokenizers break text pieces usable machine learning models. writing wordpiece morphemepiece, found many steps shared packages. package provides shared steps.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Preparing Text for Tokenizers","text":"can install released version piecemaker CRAN : development version GitHub :","code":"install.packages(\"piecemaker\") # install.packages(\"devtools\") devtools::install_github(\"macmillancontentscience/piecemaker\")"},{"path":"https://macmillancontentscience.github.io/piecemaker/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Preparing Text for Tokenizers","text":"{piecemaker} helps prepare text tokenization. example, can help clean strange encoding, whitespace, special characters.","code":"library(piecemaker)  piece1 <- \" This is a    \\n\\nfa\\xE7ile\\n\\n    example.\\n\" # Specify encoding so this example behaves the same on all systems. Encoding(piece1) <- \"latin1\" example_text <- paste(   piece1,   \"It has the bell character, \\a, and the replacement character,\",   intToUtf8(65533) ) prepare_text(example_text) #> [1] \"This is a facile example . It has the bell character , , and the replacement character ,\" prepare_text(example_text, squish_whitespace = FALSE) #> [1] \" This is a    facile    example .  It has the bell character ,   ,  and the replacement character ,  \" prepare_text(example_text, remove_control_characters = FALSE) #> [1] \"This is a facile example . It has the bell character , \\a , and the replacement character ,\" prepare_text(example_text, remove_replacement_characters = FALSE) #> [1] \"This is a facile example . It has the bell character , , and the replacement character , �\" prepare_text(example_text, remove_diacritics = FALSE) #> [1] \"This is a façile example . It has the bell character , , and the replacement character ,\""},{"path":"https://macmillancontentscience.github.io/piecemaker/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Tools for Preparing Text for Tokenizers","text":"Please note piecemaker project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Tools for Preparing Text for Tokenizers","text":"officially supported Macmillan Learning product.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/index.html","id":"contact-information","dir":"","previous_headings":"","what":"Contact information","title":"Tools for Preparing Text for Tokenizers","text":"Questions comments directed Jonathan Bratt (jonathan.bratt@macmillan.com) Jon Harmon (jonthegeek@gmail.com).","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-make_unicode_block_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Regex for Unicode Blocks — .make_unicode_block_regex","title":"Make Regex for Unicode Blocks — .make_unicode_block_regex","text":"Make Regex Unicode Blocks","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-make_unicode_block_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Regex for Unicode Blocks — .make_unicode_block_regex","text":"","code":".make_unicode_block_regex(unicode_block_name)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-make_unicode_block_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Regex for Unicode Blocks — .make_unicode_block_regex","text":"unicode_block_name name unicode block appears Wikipedia list Unicode blocks.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-make_unicode_block_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Regex for Unicode Blocks — .make_unicode_block_regex","text":"regex wildcard box square brackets.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-space_regex_selector.html","id":null,"dir":"Reference","previous_headings":"","what":"Space Text by a Regex Selector — .space_regex_selector","title":"Space Text by a Regex Selector — .space_regex_selector","text":"Space Text Regex Selector","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-space_regex_selector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Space Text by a Regex Selector — .space_regex_selector","text":"","code":".space_regex_selector(text, regex_selector)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-space_regex_selector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Space Text by a Regex Selector — .space_regex_selector","text":"text Character; text space. regex_selector regular expression selects blocks text want space.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/dot-space_regex_selector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Space Text by a Regex Selector — .space_regex_selector","text":"character vector length text, spaces around specified blocks.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/piecemaker-package.html","id":null,"dir":"Reference","previous_headings":"","what":"piecemaker: Tools for Preparing Text for Tokenizers — piecemaker-package","title":"piecemaker: Tools for Preparing Text for Tokenizers — piecemaker-package","text":"Tokenizers break text pieces usable machine learning models. Many tokenizers share preparation steps. package provides shared steps, along simple tokenizer.","code":""},{"path":[]},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/piecemaker-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"piecemaker: Tools for Preparing Text for Tokenizers — piecemaker-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID) Authors: Jonathan Bratt jonathan.bratt@macmillan.com (ORCID) contributors: Bedford Freeman & Worth Pub Grp LLC DBA Macmillan Learning [copyright holder]","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_and_tokenize.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Text on Spaces — prepare_and_tokenize","title":"Split Text on Spaces — prepare_and_tokenize","text":"extremely simple tokenizer simply splits text spaces. also optionally applies cleaning processes prepare_text.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_and_tokenize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Text on Spaces — prepare_and_tokenize","text":"","code":"prepare_and_tokenize(text, prepare = TRUE, ...)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_and_tokenize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Text on Spaces — prepare_and_tokenize","text":"text character vector clean. prepare Logical; text passed prepare_text? ... Arguments passed prepare_text squish_whitespace Logical scalar; squish whitespace characters (using str_squish)? remove_control_characters Logical scalar; remove control characters? remove_replacement_characters Logical scalar; remove \"replacement character\", U-FFFD? remove_diacritics Logical scalar; remove diacritical marks (accents, etc) characters? space_cjk Logical scalar; add spaces around Chinese/Japanese/Korean ideographs? space_punctuation Logical scalar; add spaces around punctuation (make easier keep punctuation tokenization)? remove_terminal_hyphens Logical; hyphens end lines word removed? example, \"un-\\nbroken\" become \"unbroken\". space_hyphens Logical; treat hyphens letters start/end words punctuation? hyphens always treated punctuation. space_abbreviations Logical; treat apostrophes letters punctuation? apostrophes always treated punctuation.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_and_tokenize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Text on Spaces — prepare_and_tokenize","text":"text list character vectors. element vector roughly equivalent word.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_and_tokenize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split Text on Spaces — prepare_and_tokenize","text":"","code":"prepare_and_tokenize(\"This is some text.\") #> [[1]] #> [1] \"This\" \"is\"   \"some\" \"text\" \".\"    #>  prepare_and_tokenize(\"This is some text.\", space_punctuation = FALSE) #> [[1]] #> [1] \"This\"  \"is\"    \"some\"  \"text.\" #>"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Text for Tokenization — prepare_text","title":"Prepare Text for Tokenization — prepare_text","text":"function combines functions package prepare text tokenization. text gets converted valid UTF-8 (possible), various cleaning functions applied.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Text for Tokenization — prepare_text","text":"","code":"prepare_text(   text,   squish_whitespace = TRUE,   remove_terminal_hyphens = TRUE,   remove_control_characters = TRUE,   remove_replacement_characters = TRUE,   remove_diacritics = TRUE,   space_cjk = TRUE,   space_punctuation = TRUE,   space_hyphens = TRUE,   space_abbreviations = TRUE )"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Text for Tokenization — prepare_text","text":"text character vector clean. squish_whitespace Logical scalar; squish whitespace characters (using str_squish)? remove_terminal_hyphens Logical; hyphens end lines word removed? example, \"un-\\nbroken\" become \"unbroken\". remove_control_characters Logical scalar; remove control characters? remove_replacement_characters Logical scalar; remove \"replacement character\", U-FFFD? remove_diacritics Logical scalar; remove diacritical marks (accents, etc) characters? space_cjk Logical scalar; add spaces around Chinese/Japanese/Korean ideographs? space_punctuation Logical scalar; add spaces around punctuation (make easier keep punctuation tokenization)? space_hyphens Logical; treat hyphens letters start/end words punctuation? hyphens always treated punctuation. space_abbreviations Logical; treat apostrophes letters punctuation? apostrophes always treated punctuation.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Text for Tokenization — prepare_text","text":"character vector, cleaned specified.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/prepare_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Text for Tokenization — prepare_text","text":"","code":"piece1 <- \" This is a    \\n\\nfa\\xE7ile\\n\\n    example.\\n\" # Specify encoding so this example behaves the same on all systems. Encoding(piece1) <- \"latin1\" example_text <- paste(   piece1,   \"It has the bell character, \\a, and the replacement character,\",   intToUtf8(65533) ) prepare_text(example_text) #> [1] \"This is a facile example . It has the bell character , , and the replacement character ,\" prepare_text(example_text, squish_whitespace = FALSE) #> [1] \" This is a    facile    example .  It has the bell character ,   ,  and the replacement character ,  \" prepare_text(example_text, remove_control_characters = FALSE) #> [1] \"This is a facile example . It has the bell character , \\a , and the replacement character ,\" prepare_text(example_text, remove_replacement_characters = FALSE) #> [1] \"This is a facile example . It has the bell character , , and the replacement character , �\" prepare_text(example_text, remove_diacritics = FALSE) #> [1] \"This is a façile example . It has the bell character , , and the replacement character ,\""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_control_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Non-Character Characters — remove_control_characters","title":"Remove Non-Character Characters — remove_control_characters","text":"Unicode includes several control codes, U+0000 (NULL, used null-terminated strings) U+000D (carriage return). function removes characters text.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_control_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Non-Character Characters — remove_control_characters","text":"","code":"remove_control_characters(text)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_control_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Non-Character Characters — remove_control_characters","text":"text character vector clean.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_control_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Non-Character Characters — remove_control_characters","text":"character vector without control characters.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_control_characters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Non-Character Characters — remove_control_characters","text":"Note: highly recommend first condense space-like characters (including new lines) removing control codes. can easily str_squish. also recommend validating text start cleaning process using validate_utf8.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_control_characters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Non-Character Characters — remove_control_characters","text":"","code":"remove_control_characters(\"Line 1\\nLine2\") #> [1] \"Line 1Line2\""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_diacritics.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Diacritical Marks on Characters — remove_diacritics","title":"Remove Diacritical Marks on Characters — remove_diacritics","text":"Accent characters diacritical marks often difficult type, thus can missing text. normalize various ways user might spell word diacritical mark, can convert characters simpler equivalent character.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_diacritics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Diacritical Marks on Characters — remove_diacritics","text":"","code":"remove_diacritics(text)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_diacritics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Diacritical Marks on Characters — remove_diacritics","text":"text character vector clean.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_diacritics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Diacritical Marks on Characters — remove_diacritics","text":"character vector simpler character representations.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_diacritics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Diacritical Marks on Characters — remove_diacritics","text":"","code":"# This text can appear differently between machines if we aren't careful, so # we explicitly encode the desired characters. sample_text <- \"fa\\u00e7ile r\\u00e9sum\\u00e9\" sample_text #> [1] \"façile résumé\" remove_diacritics(sample_text) #> [1] \"facile resume\""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_replacement_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the Unicode Replacement Character — remove_replacement_characters","title":"Remove the Unicode Replacement Character — remove_replacement_characters","text":"replacement character, U+FFFD, used mark characters loaded. characters might sign encoding issues, advisable investigate try eliminate cases text, end characters almost definitely confuse downstream processes.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_replacement_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the Unicode Replacement Character — remove_replacement_characters","text":"","code":"remove_replacement_characters(text)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_replacement_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove the Unicode Replacement Character — remove_replacement_characters","text":"text character vector clean.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_replacement_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove the Unicode Replacement Character — remove_replacement_characters","text":"character vector replacement characters removed.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/remove_replacement_characters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove the Unicode Replacement Character — remove_replacement_characters","text":"","code":"remove_replacement_characters(   paste(     \"The replacement character:\",     intToUtf8(65533)   ) ) #> [1] \"The replacement character: \""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_cjk.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Spaces Around CJK Ideographs — space_cjk","title":"Add Spaces Around CJK Ideographs — space_cjk","text":"tokenize Chinese, Japanese, Korean (CJK) characters, convenient add spaces around characters.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_cjk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Spaces Around CJK Ideographs — space_cjk","text":"","code":"space_cjk(text)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_cjk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Spaces Around CJK Ideographs — space_cjk","text":"text character vector clean.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_cjk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Spaces Around CJK Ideographs — space_cjk","text":"character vector length input text, spaces added ideographs.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_cjk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Spaces Around CJK Ideographs — space_cjk","text":"","code":"to_space <- intToUtf8(13312:13320) to_space #> [1] \"㐀㐁㐂㐃㐄㐅㐆㐇㐈\" space_cjk(to_space) #> [1] \" 㐀  㐁  㐂  㐃  㐄  㐅  㐆  㐇  㐈 \""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_punctuation.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Spaces Around Punctuation — space_punctuation","title":"Add Spaces Around Punctuation — space_punctuation","text":"keep punctuation tokenization, convenient add spacing around punctuation. function , options keep certain types punctuation together part word.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_punctuation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Spaces Around Punctuation — space_punctuation","text":"","code":"space_punctuation(text, space_hyphens = TRUE, space_abbreviations = TRUE)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_punctuation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Spaces Around Punctuation — space_punctuation","text":"text character vector clean. space_hyphens Logical; treat hyphens letters start/end words punctuation? hyphens always treated punctuation. space_abbreviations Logical; treat apostrophes letters punctuation? apostrophes always treated punctuation.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_punctuation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Spaces Around Punctuation — space_punctuation","text":"character vector length input text, spaces added around punctuation characters.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/space_punctuation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Spaces Around Punctuation — space_punctuation","text":"","code":"to_space <- \"This is some 'gosh-darn' $5 text. Isn't it lovely?\" to_space #> [1] \"This is some 'gosh-darn' $5 text. Isn't it lovely?\" space_punctuation(to_space) #> [1] \"This is some  ' gosh - darn '   $ 5 text .  Isn ' t it lovely ? \" space_punctuation(to_space, space_hyphens = FALSE) #> [1] \"This is some  ' gosh-darn '   $ 5 text .  Isn ' t it lovely ? \" space_punctuation(to_space, space_abbreviations = FALSE) #> [1] \"This is some  ' gosh - darn '   $ 5 text .  Isn't it lovely ? \""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/squish_whitespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Extra Whitespace — squish_whitespace","title":"Remove Extra Whitespace — squish_whitespace","text":"function mostly wrapper around str_squish, additional option remove hyphens ends lines.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/squish_whitespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Extra Whitespace — squish_whitespace","text":"","code":"squish_whitespace(text, remove_terminal_hyphens = TRUE)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/squish_whitespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Extra Whitespace — squish_whitespace","text":"text character vector clean. remove_terminal_hyphens Logical; hyphens end lines word removed? example, \"un-\\nbroken\" become \"unbroken\".","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/squish_whitespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Extra Whitespace — squish_whitespace","text":"character vector spacing start end removed, internal spacing reduced single space character .","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/squish_whitespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Extra Whitespace — squish_whitespace","text":"","code":"sample_text <- \"This  had many space char-\\\\nacters.\" squish_whitespace(sample_text) #> [1] \"This had many space char-\\\\nacters.\""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/tokenize_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Break Text at Spaces — tokenize_space","title":"Break Text at Spaces — tokenize_space","text":"extremely simple tokenizer, breaking exactly space character. tokenizer intended work tandem prepare_text, spaces cleaned inserted necessary tokenizer runs. function prepare_text combined together prepare_and_tokenize.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/tokenize_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Break Text at Spaces — tokenize_space","text":"","code":"tokenize_space(text)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/tokenize_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Break Text at Spaces — tokenize_space","text":"text character vector clean.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/tokenize_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Break Text at Spaces — tokenize_space","text":"text list character vectors (one vector per element text). element vector roughly equivalent word.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/tokenize_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Break Text at Spaces — tokenize_space","text":"","code":"tokenize_space(\"This is some text.\") #> [[1]] #> [1] \"This\"  \"is\"    \"some\"  \"text.\" #>"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/validate_utf8.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Up Text to UTF-8 — validate_utf8","title":"Clean Up Text to UTF-8 — validate_utf8","text":"Text cleaning works best encoding known. function attempts convert text UTF-8 encoding, provides informative error possible.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/validate_utf8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Up Text to UTF-8 — validate_utf8","text":"","code":"validate_utf8(text)"},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/validate_utf8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Up Text to UTF-8 — validate_utf8","text":"text character vector clean.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/validate_utf8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Up Text to UTF-8 — validate_utf8","text":"text formal UTF-8 encoding, possible.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/reference/validate_utf8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Up Text to UTF-8 — validate_utf8","text":"","code":"text <- \"fa\\xE7ile\" # Specify the encoding so the example is the same on all systems. Encoding(text) <- \"latin1\" validate_utf8(text) #> [1] \"façile\""},{"path":[]},{"path":"https://macmillancontentscience.github.io/piecemaker/news/index.html","id":"piecemaker-102","dir":"Changelog","previous_headings":"","what":"piecemaker 1.0.2","title":"piecemaker 1.0.2","text":"Streamlined validate_utf8() work consistently across OS R versions.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/news/index.html","id":"piecemaker-101","dir":"Changelog","previous_headings":"","what":"piecemaker 1.0.1","title":"piecemaker 1.0.1","text":"CRAN release: 2022-03-03 Removed purrr dependency.","code":""},{"path":"https://macmillancontentscience.github.io/piecemaker/news/index.html","id":"piecemaker-100","dir":"Changelog","previous_headings":"","what":"piecemaker 1.0.0","title":"piecemaker 1.0.0","text":"CRAN release: 2021-08-06 Added NEWS.md file track changes package. Initial CRAN release.","code":""}]
