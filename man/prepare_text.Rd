% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean.R
\name{prepare_text}
\alias{prepare_text}
\title{Prepare Text for Tokenization}
\usage{
prepare_text(
  text,
  whitespace = TRUE,
  remove_terminal_hyphens = TRUE,
  control_characters = TRUE,
  replacement_characters = TRUE,
  diacritics = TRUE,
  cjk = TRUE,
  punctuation = TRUE,
  hyphens = TRUE,
  abbreviations = TRUE
)
}
\arguments{
\item{text}{A character vector to clean.}

\item{whitespace}{Logical scalar; squish whitespace characters (using
\code{\link[stringr]{str_squish}})?}

\item{remove_terminal_hyphens}{Logical; should hyphens at the end of lines
after a word be removed? For example, "un-\\nbroken" would become
"unbroken".}

\item{control_characters}{Logical scalar; remove control characters?}

\item{diacritics}{Logical scalar; remove diacritical marks (accents, etc)
from characters?}

\item{cjk}{Logical scalar; add spaces around Chinese/Japanese/Korean
ideographs?}

\item{punctuation}{Logical scalar; add spaces around punctuation (to make it
easier to keep punctuation during tokenization)?}

\item{hyphens}{Logical; treat hyphens between letters and at the start/end of
words as punctuation? Other hyphens are always treated as punctuation.}

\item{abbreviations}{Logical; treat apostrophes between letters as
punctuation? Other apostrophes are always treated as punctuation.}

\item{remove_replacement_characters}{Logical scalar; remove the "replacement
character", \code{U-FFFD}?}
}
\value{
The character vector, cleaned as specified.
}
\description{
This function combines the other functions in this package to prepare text
for tokenization. The text gets converted to valid UTF-8 (if possible), and
then various cleaning functions are applied.
}
\examples{
piece1 <- " This is a    \n\nfa\xE7ile\n\n    example.\n"
# Specify encoding so this example behaves the same on all systems.
Encoding(piece1) <- "latin1"
example_text <- paste(
  piece1,
  "It has the bell character, \a, and the replacement character,",
  intToUtf8(65533)
)
prepare_text(example_text)
prepare_text(example_text, whitespace = FALSE)
prepare_text(example_text, control_characters = FALSE)
prepare_text(example_text, replacement_characters = FALSE)
prepare_text(example_text, diacritics = FALSE)
}
